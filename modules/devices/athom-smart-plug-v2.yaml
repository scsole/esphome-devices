---
substitutions:
  name: athom-smart-plug-v2
  friendly_name: Smart Plug V2
  comment: Athom Smart Plug V2
  room:
  flash_write_interval: 5min
  wifi_reboot_timeout: 15min
  api_reboot_timeout: 30min
  update_interval: 10s
  restore_mode: RESTORE_DEFAULT_OFF
  # Power bellow this threshold will be reported as 0W
  zero_power_threshold: "3"

esphome:
  name: $name
  friendly_name: $friendly_name
  comment: $comment
  area: $room
  name_add_mac_suffix: false

esp8266:
  board: esp8285
  restore_from_flash: true

preferences:
  flash_write_interval: $flash_write_interval

# Disable logging over USB
logger:
  baud_rate: 0

# Enable Home Assistant API
api:
  reboot_timeout: $api_reboot_timeout
  encryption:
    key: !secret api_encryption_key

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  reboot_timeout: $wifi_reboot_timeout

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: $name
    password: !secret ap_password

captive_portal:

uart:
  rx_pin: RX
  baud_rate: 4800

binary_sensor:
  - platform: status
    name: Status

  - platform: gpio
    pin:
      number: 5
      mode:
        input: true
        pullup: true
      inverted: true
    name: Button
    disabled_by_default: true
    on_multi_click:
      - timing:
          - ON for at most 1s
          - OFF for at least 0.2s
        then:
          - switch.toggle: relay
      - timing:
          - ON for at least 4s
        then:
          - button.press: factory_reset_button

sensor:
  - platform: uptime
    name: Uptime

  - platform: wifi_signal
    name: WiFi Signal
    update_interval: 60s

  - platform: cse7766
    current:
      name: Current
      filters:
        - throttle_average: ${update_interval}
    voltage:
      name: Voltage
      filters:
        - throttle_average: ${update_interval}
    power:
      name: Power
      id: power_sensor
      filters:
        - throttle_average: ${update_interval}
        - lambda: |-
            if (x < ${zero_power_threshold})
              return 0.0;
            else
              return x;
    energy:
      name: Energy
      id: energy
      unit_of_measurement: kWh
      filters:
        - throttle: ${update_interval}
        - multiply: 0.001 # W to kW
    apparent_power:
      name: Apparent Power
      filters:
        - throttle_average: ${update_interval}
    power_factor:
      name: Power Factor
      filters:
        - throttle_average: ${update_interval}

button:
  - platform: restart
    name: Restart
    id: restart_button

  - platform: factory_reset
    name: Factory Reset
    id: factory_reset_button

  - platform: safe_mode
    name: Safe Mode
    id: safe_mode_button

switch:
  - platform: gpio
    name: Switch
    pin: GPIO12
    id: relay
    restore_mode: ${restore_mode}

light:
  - platform: status_led
    name: Status LED
    pin:
      number: GPIO13
      inverted: true
    entity_category: config

time:
  - platform: homeassistant
    id: time_homeassistant
